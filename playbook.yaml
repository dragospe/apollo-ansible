---
- hosts: commandline
  tasks:
  - name: install EPEL (if redhat)
    package:
      name:
        - epel-release
      state: present
    become: yes
    when: ansible_os_family == 'RedHat'
  - name: install commonly-used software
    package:
      name:
        - git
        - emacs
        - htop
        - ntp
        - awscli
        - "{{ 'postgresql'   if ansible_os_family == 'RedHat' else 'postgresql-client' }}"
        - "{{ 'python2-pip'  if ansible_os_family == 'RedHat' else 'python-pip' }}"
        - "{{ 'python34-pip' if ansible_os_family == 'RedHat' else 'python3-pip' }}"
        - "{{ 'mlocate'      if ansible_os_family == 'RedHat' else 'locate' }}"
      state: present
    become: yes
  - name: enable ntpd
    service:
      name: "{{ 'ntpd'  if ansible_os_family == 'RedHat' else 'ntp' }}"
      enabled: yes
      state: started
    become: yes

- hosts: remote
  tasks:
  - import_tasks: alex_account.yaml
  - name: set hostname
    hostname:
      name: "{{ inventory_hostname }}"
    become: yes
  - name: set timezone
    timezone:
      name: America/New_York
    become: yes
  # - name: install ddclient
  #   # TODO: configure+start it
  #   package:
  #     name:
  #       - ddclient
  #     state: present
  #   become: yes
  # TODO?: tmux, bash config, aliases, editor, molly-guard, fail2ban, ...

- hosts: scripts
  tasks:
  - name: add grafana repository
    yum_repository:
      name: grafana
      description: grafana repo
      # enabled: yes
      baseurl: https://packagecloud.io/grafana/stable/el/7/$basearch
      repo_gpgcheck: yes
      gpgcheck: yes
      gpgkey: 'https://packagecloud.io/gpg.key https://grafanarel.s3.amazonaws.com/RPM-GPG-KEY-grafana'
      # TODO: import the packagecloud key.  see https://github.com/ansible/ansible/issues/20711
      sslverify: yes
      sslcacert: /etc/pki/tls/certs/ca-bundle.crt
    become: yes
  - name: install grafana
    package:
      name:
        - grafana
      state: present
    become: yes
  # TODO: grafana setup, tls, dns, etc.
  - import_tasks: s3.yaml
  - import_tasks: apollo_code.yaml

# - hosts: oauth
#   # remote_user: centos
#   # become: yes
#   tasks:
#   - name: ensure apache is at the latest version
#     yum:
#       name: httpd
#       state: latest
#     become: yes
#   # - name: write the apache config file
#   #   template:
#   #     src: /srv/httpd.j2
#   #     dest: /etc/httpd.conf
#   #   - name: ensure that postgresql is started
#   #     service:
#   #       name: postgresql
#   #       state: started

- hosts: databases
  vars:
    login_host: apollotestdb.cya9db53pp70.us-east-1.rds.amazonaws.com
    login_user: apollodevdb
    login_password: "{{ lookup('file', 'secrets/rds_password.txt') }}"
    ssl_mode: require  # or verify-ca / verify-full
  tasks:
  - import_tasks: db.yaml
# TODO: pg_dump "APOLLO_DB_NAME_HERE" > /some/backup/location/APOLLO_DB_NAME_HERE.dump

# TODO: latest version of stuff for test, pinned to some "latest working" for prod
