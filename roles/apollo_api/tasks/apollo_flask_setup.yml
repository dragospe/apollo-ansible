- name: copy bitbucket private key
  copy:
    src: ansible_bitbucket_apollo_flask_key
    dest: /home/apollo/.ssh/id_rsa
    owner: apollo
    group: apollo
    mode: 0600

- name: Add bitbucket to known hosts
  known_hosts:
    name: bitbucket.org
    key: bitbucket.org,18.205.93.1 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
  become_user: apollo

- name: Ensure the application directory exists
  file:
   path: '{{ apollo_flask_application_directory }}'
   state: directory
   mode: '0700'
   owner: apollo
   group: apollo

- name: Ensure the logging directory exists
  file:
    path: '{{ apollo_flask_log_directory }}'
    state: directory
    mode: '0700'
    owner: apollo
    group: apollo

- name: pull apollo_flask from bitbucket
  git:
    dest: '{{ apollo_flask_application_directory }}'
    repo: '{{ apollo_flask_git_uri }}'
    version: '{{ apollo_flask_git_version }}'
  become_user: apollo 

- name: Install virtualenv
  yum:
    name: python-virtualenv
    state: present

- name: pip3 install apollo_flask
  pip:
    name: .
    chdir: "{{ apollo_flask_application_directory }}"
    umask: "0022"
    virtualenv: "{{ apollo_flask_application_directory }}/venv"
    virtualenv_command: '/usr/bin/virtualenv -p python3'
  become_user: apollo

- name: Ensure instance folder exists
  file:
    path: '{{ apollo_flask_application_directory }}/venv/var/apollo_flask-instance/' 
    state: directory
    owner: apollo
    group: users 
    mode: 0700

- name: Copy garmin api keys
  copy:
    src: instance_config.py
    dest: '{{ apollo_flask_application_directory }}/venv/var/apollo_flask-instance/config.py'
    owner: apollo
    group: apollo
    mode: 0600

- name: Set project name in instance config
  lineinfile: 
    path: '{{ apollo_flask_application_directory }}/venv/var/apollo_flask-instance/config.py'
    insertafter: EOF
    line: 'PROJECT_NAME = "{{ project_name }}"'

- name: Set database configuration
  blockinfile:
    path: '{{ apollo_flask_application_directory }}/venv/var/apollo_flask-instance/config.py'
    block: |
      DATABASE_URI = '{{ apollo_site_database_uri }}'
      DATABASE_NAME = '{{ apollo_site_database_name }}'
      DEFAULT_DATABASE_URI = '{{ apollo_site_default_database_uri | default("") }}'

- name: Set SELinux port 8000 type to httpd_t
  seport:
    ports: 8000
    proto: tcp
    setype: http_port_t
    state: present

- name: Initialize the database
  command: '{{ apollo_flask_application_directory }}/venv/bin/flask init-db'
  environment:
    FLASK_APP: '{{ apollo_flask_application_directory}}/venv/lib/python3.6/site-packages/apollo_flask/__init__:create_app'
  become_user: apollo
  become: yes

      
