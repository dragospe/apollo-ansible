---
- name: Create /usr/share/grafana/tls
  file:
    path: /usr/share/grafana/tls
    state: directory
    mode: '0755'
    owner: 'grafana'
    group: 'grafana'


- name: stat grafana.ini
  stat: path=/etc/grafana/grafana.ini.backup
  register: grafana_stat

- name: Backup original grafana.ini file if needed
  command: cp /etc/grafana/grafana.ini /etc/grafana/grafana.ini.backup
  when: not grafana_stat.stat.exists

- name: Add "ansible managed" comment
  lineinfile:
    path: /etc/grafana/grafana.ini
    line: ';### Ansible Managed: Manually entered contents may be overwritten. ###'
    insertbefore: BOF

- name: Set grafana configuration options
  ini_file:
    path: /etc/grafana/grafana.ini
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
  with_items:
    ### [server] section ###
    - { section: server, option: protocol, value: socket}
    - { section: server, option: socket, value: /grafana_socket/grafana.socket }
    - { section: server, option: domain, value: '{{ apollo_monitor_domain }}'}
    - { section: server, option: enforce_domain, value: true}
    - { section: server, option: root_url, value: '{{ apollo_monitor_root_url }}' }
    ### [database] section ###
    - { section: database, option: type, value: postgres }
    - { section: database, option: host, value: '{{ apollo_monitor_postgresql_backend_host }}' }
    - { section: database, option: name, value: '{{ apollo_monitor_postgresql_backend_database_name }}' }
    - { section: database, option: user, value: '{{ apollo_monitor_postgresql_backend_database_username }}' }
    - { section: database, option: password, value: '{{ apollo_monitor_postgresql_backend_database_password }}' }
    ### [security] section ###
    - { section: security, option: cookie_secure, value: true }
    - { section: security, option: strict_transport_security, value: true }
    - { section: security, option: strict_transport_security_preload, value: true }
    - { section: security, option: strict transport_security_subdomains, value: true }
    - { section: security, option: x_content_type_options, value: true }
    - { section: security, option: x_xss_protection, value: true }
  notify: restart grafana

- name: Add firewalld rule
  firewalld:
    port: 3000/tcp
    permanent: yes
    state: enabled
    offline: yes
    #immediate: yes

- name: Ensure "grafana_socket" group exists
  group:
    name: grafana_socket
    state: present

- name: Ensure "nginx" user is in "grafana_socket" group
  user:
    name: nginx
    groups: grafana_socket
    append: yes

- name: Ensure "grafana" user is in "grafana_socket" group
  user:
    name: grafana
    groups: grafana_socket
    append: yes


- name: Create sockets directory
  file:
    path: grafana_socket
    owner: root
    group: grafana_socket
    mode: '2070'
    state: directory


