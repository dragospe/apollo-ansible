- name: Create /usr/share/grafana/tls
  file:
    path: /usr/share/grafana/tls
    state: directory
    mode: '0755'
    owner: 'grafana'
    group: 'grafana'

- name: Copy over TLS files
  block:
    - name: Copy key
      copy: 
        src: '[{{ lifecycle_state }}]_apollo_monitor_server.key'
        dest: '/usr/share/grafana/tls/tls.key'
        mode: '0400'
        owner: grafana
        group: grafana 
    
    - name: Copy certificate
      copy:
        src: '[{{ lifecycle_state }}]_apollo_monitor_server.crt'
        dest: '/usr/share/grafana/tls/tls.crt'
        mode: '0555'
        owner: grafana
        group: grafana

- name: stat grafana.ini
  stat: path=/etc/grafana/grafana.ini.backup
  register: grafana_stat

- name: Backup original grafana.ini file if needed
  command: cp /etc/grafana/grafana.ini /etc/grafana/grafana.ini.backup
  when: not grafana_stat.stat.exists

- name: Add "ansible managed" comment
  lineinfile:
    path: /etc/grafana/grafana.ini
    line: ';### Ansible Managed: Manually entered contents may be overwritten. ###'

- name: Set grafana configuration options
  ini_file:
    path: /etc/grafana/grafana.ini
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
  with_items:
    
    ### [server] section ###
    - { section: server, option: protocol, value: https}
    - { section: server, option: domain, value: '{{ apollo_monitor_domain }}'}
    # TODO: Uncomment this. Prevents DNS rebinding attacks, but DNS is not yet setup:
    #- { section: server, option: enforce_domain, value: true}
    - { section: server, option: root_url, value: '{{ apollo_monitor_root_url}}' }
    - { section: server, option: cert_file, value: '/usr/share/grafana/tls/tls.crt'}
    - { section: server, option: cert_key, value: '/usr/share/grafana/tls/tls.key' }
  
    ### [security] section ###
    - { section: security, option: cookie_secure, value: true }
    - { section: security, option: strict_transport_security, value: true }
    - { section: security, option: strict_transport_security_preload, value: true }
    - { section: security, option: strict transport_security_subdomains, value: true }
    - { section: security, option: x_content_type_options, value: true }
    - { section: security, option: x_xss_protection, value: true }
  notify: restart grafana
  

- debug:  
    msg: '{{ apollo_monitor_root_url }}/api/admin/users/1/password'  


- name: Add firewalld rule
  firewalld:
    port: 3000/tcp
    permanent: yes
    state: enabled
    offline: yes
    immediate: yes

- name: Change grafana admin password (ignoring if already changed).
      uri: 
        url: "{{ apollo_monitor_root_url }}/api/admin/users/1/password"  
        method: put
        url_username: 'admin'
        url_password: 'admin'
        body: 
          password: '{{ apollo_monitor_grafana_admin_password }}' 
        body_format: json
        force_basic_auth: yes
  ignore_errors: yes  


