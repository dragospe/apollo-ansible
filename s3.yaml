##################################### s3fs #####################################

- name: download s3fs
  git:
    repo: https://github.com/s3fs-fuse/s3fs-fuse.git
    dest: /home/alex/code/s3fs-fuse
  become: yes
  become_user: alex

- name: install s3fs prereqs (redhat)
  package:
    name:
      - automake
      - fuse
      - fuse-devel
      - gcc-c++
      - git
      - libcurl-devel
      - libxml2-devel
      - make
      - openssl-devel
    state: present
  become: yes
  when: ansible_os_family == 'RedHat'

- name: install s3fs prereqs (debian)
  package:
    name:
      - automake
      - autotools-dev
      - fuse
      - g++
      - git
      - libcurl4-openssl-dev
      - libfuse-dev
      - libssl-dev
      - libxml2-dev
      - make
      - pkg-config
    state: present
  become: yes
  when: ansible_os_family == 'Debian'

- name: compile s3fs
  command: "{{ item }}"
  with_items:
    - ./autogen.sh
    - ./configure
    - make
  args:
    chdir: /home/alex/code/s3fs-fuse
    creates: /home/alex/code/s3fs-fuse/src/s3fs
  become: yes
  become_user: alex

- name: install s3fs
  command: make install
  args:
    chdir: /home/alex/code/s3fs-fuse
    creates: /usr/local/bin/s3fs
  become: yes

- name: install S3 credentials
  copy:
    src: /home/alex/code/apollo_ansible/secrets/passwd-s3fs
    dest: /etc/passwd-s3fs
    owner: root
    group: root
    mode: 0640
  become: yes

##################################### s3ql #####################################

- name: install python developer tools
  package:
    name:
      - "{{ 'python-devel'   if ansible_os_family == 'RedHat' else 'python-dev' }}"
      - "{{ 'python34-devel' if ansible_os_family == 'RedHat' else 'python3-dev' }}"
    state: present
  become: yes

- name: install s3ql prereqs (yum)
  package:
    name:
      - unzip
      - bzip2
      - "{{ 'sqlite-devel' if ansible_os_family == 'RedHat' else 'libsqlite3-dev' }}"
      # TODO?:
      #   systemd-devel
      #   libattr-devel
      #   fuse-devel
      #   psmisc
      #   sqlite
      #   gcc
      #   git
    state: present
  become: yes

- name: install s3ql prereqs (pip)
  pip:
    name: "{{ item }}"
    executable: pip3
  with_items:
    - apsw
    - pycrypto
    - requests
    - defusedxml
    - 'llfuse==1.3.5'
    - 'dugong==3.7.3'
    - pytest  # optional, to run unit tests
    # TODO?:
    # setuptools, version 1.0 or newer
    # systemd (optional, for enabling systemd support)
    # pytest-catchlog
  become: yes
  # Those are (mostly) all listed in setup.py, but we seem to need to install
  # them manually.  (see https://github.com/pypa/pip/issues/4780)
  # Note: exact version numbers are used to work aroud
  # https://github.com/ansible/ansible/issues/22399.

- name: extract s3ql source
  unarchive:
    src: /home/alex/code/apollo_ansible/bin/s3ql-2.30.tar.bz2
    dest: /home/alex/code
    creates: /home/alex/code/s3ql-2.30/setup.py
  become: yes
  become_user: alex

- name: compile s3ql
  command: 'python3 setup.py build_ext --inplace'
  args:
    chdir: /home/alex/code/s3ql-2.30
    creates: /home/alex/code/s3ql-2.30/src/s3ql/deltadump.cpython-34m.so
  become: yes
  become_user: alex
  # Note: you can test it with `python3 -m pytest tests/`.

- name: install s3ql
  command: python3 setup.py install
  args:
    chdir: /home/alex/code/s3ql-2.30
    creates: /usr/bin/mount.s3ql
  become: yes

# TODO: creds (http://www.rath.org/s3ql-docs/authinfo.html)

################################################################################
